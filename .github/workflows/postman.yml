# Name of the GitHub Actions
name: Automated API tests on Mock School Delete Case

# Set the actions that triggers the workflow
on:
  push:
    branches:
      - '**'
  workflow_dispatch:
jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Install Node on the runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

      # Install the Newman command line utility, the html extra reporter and Slack Reporter
      - name: Install Newman, HTMLReporter and Slack Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      # Make directory to upload the results
      - name: Make Directory for Test results
        run:
          mkdir -p testResults

          # Added the missing hyphen here
      - name: Run Database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          EMAIL_NAME_SERVICE: ${{ secrets.EMAIL_NAME_SERVICE }}
          EMAIL_PASSWORD_SERVICE: ${{ secrets.EMAIL_PASSWORD_SERVICE }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALL_BACK: ${{ secrets.GOOGLE_CALL_BACK }}
          GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
          GOOGLE_CLOUD_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY_ID }}
          GOOGLE_CLOUD_PRIVATE_KEY_ENCODE: ${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY_ENCODE }}
          GOOGLE_CLOUD_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLOUD_CLIENT_EMAIL }}
          GOOGLE_CLOUD_STORAGE_MEDIA_BUCKET: ${{ secrets.GOOGLE_CLOUD_STORAGE_MEDIA_BUCKET }}
          GOOGLE_CLOUD_CLIENT_ID: ${{ secrets.GOOGLE_CLOUD_CLIENT_ID }}
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          STUDENT_JWT_ACCESS_SECRET: ${{ secrets.STUDENT_JWT_ACCESS_SECRET }}
          STUDENT_JWT_REFRESH_SECRET: ${{ secrets.STUDENT_JWT_REFRESH_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          WHEEL_OF_NAME_SECRET_KEY: ${{ secrets.WHEEL_OF_NAME_SECRET_KEY }}
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          VAPID_EMAIL: ${{ secrets.VAPID_EMAIL}}
          NODE_ENV: test
        run: npm run docker:build:run:test

      # Run the POSTMAN Collection
      - name: Run Postman Collection
        env:
          COLLECTION_UID: 37935730-554c9a4f-9c80-451d-a58e-bf21b9966c12
          ENVIRONMENT_UID: 19610448-7e19cd20-f24a-4726-a730-f51baa7003cc
          API_KEY: ${{secrets.POSTMAN_API_KEY}}
        run: |
          newman run https://api.getpostman.com/collections/$COLLECTION_UID?apikey=$API_KEY --environment https://api.getpostman.com/environments/$ENVIRONMENT_UID?apikey=$API_KEY –suppress-exit-code –reporters htmlextra –reporter-htmlextra-export testResults/htmlReport.html

            # Upload the contents of Test Results directory to workspace
      - name: Output the Result Details
        uses: actions/upload-artifact@v4.6.2
        with:
          name: RunReports
          path: testResults
