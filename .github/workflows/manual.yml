name: Run Unit Tests
on: pull_request
env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  CLIENT_URL: ${{ secrets.CLIENT_URL }}
  EMAIL_NAME_SERVICE: ${{ secrets.EMAIL_NAME_SERVICE }}
  EMAIL_PASSWORD_SERVICE: ${{ secrets.EMAIL_PASSWORD_SERVICE }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  GOOGLE_CALL_BACK: ${{ secrets.GOOGLE_CALL_BACK }}
  GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
  GOOGLE_CLOUD_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY_ID }}
  GOOGLE_CLOUD_PRIVATE_KEY_ENCODE: ${{ secrets.GOOGLE_CLOUD_PRIVATE_KEY_ENCODE }}
  GOOGLE_CLOUD_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLOUD_CLIENT_EMAIL }}
  GOOGLE_CLOUD_STORAGE_MEDIA_BUCKET: ${{ secrets.GOOGLE_CLOUD_STORAGE_MEDIA_BUCKET }}
  GOOGLE_CLOUD_CLIENT_ID: ${{ secrets.GOOGLE_CLOUD_CLIENT_ID }}
  JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
  JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
  STUDENT_JWT_ACCESS_SECRET: ${{ secrets.STUDENT_JWT_ACCESS_SECRET }}
  STUDENT_JWT_REFRESH_SECRET: ${{ secrets.STUDENT_JWT_REFRESH_SECRET }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  NODE_ENV: test
jobs:
  test: # Renamed from 'build' for clarity, though 'build' would also work
    runs-on: ubuntu-latest
    services:
      # Define the MongoDB service using your docker-compose.yml
      database_TATUGA_SCHOOL:
        image: prismagraphql/mongo-single-replica:4.4.3-bionic
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: prisma
          MONGO_REPLICA_HOST: host.docker.internal
          INIT_WAIT_SEC: 3
        ports:
          - 27017:27017
        options: --health-cmd "mongo admin --username root --password prisma --eval 'db.adminCommand({ping: 1})'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Or your preferred Node.js version

      - name: Install dependencies
        run: npm ci

      # Added the missing hyphen here
      - name: Wait for MongoDB
        run: |
          # Install netcat if it's not already present (common on runners)
          sudo apt-get update && sudo apt-get install -y netcat
          for i in $(seq 1 10); do
            nc -z localhost 27017 && echo "MongoDB is reachable" && exit 0
            echo "Waiting for MongoDB..."
            sleep 5
          done
          echo "MongoDB is not reachable after multiple attempts"
          exit 1

      # Assuming you need to run Prisma migrations and generate client here
      # before running tests, based on your local workflow
      - name: Run Prisma migrations and generate client
        run: |
          npm run prisma:dev:deploy
          npm run prisma:generate

      - name: Run tests
        run: npm run test